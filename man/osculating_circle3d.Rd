% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/osculating_circle3d.R
\name{osculating_circle3d}
\alias{osculating_circle3d}
\title{Osculating discs (or circles) of a spatial curve r(t)}
\usage{
osculating_circle3d(
  X,
  Y,
  Z,
  a,
  b,
  t_points,
  h = 1e-04,
  plot = FALSE,
  n_samples = 400,
  fill = c("disk", "ring"),
  ru = 24,
  rv = 72,
  colorscale = "Reds",
  opacity = 0.6,
  ring_line = list(color = "red", width = 4, dash = "solid"),
  show_curve = TRUE,
  show_points = TRUE,
  curve_line = list(color = "blue", width = 2, dash = "solid"),
  point_marker = list(color = "black", size = 3, symbol = "circle"),
  show_radius = FALSE,
  radius_phase = 0,
  radius_line = list(color = "orange", width = 5, dash = "solid"),
  scene = list(aspectmode = "data", xaxis = list(title = "x(t)"), yaxis = list(title =
    "y(t)"), zaxis = list(title = "z(t)")),
  bg = list(paper = "white", plot = "white"),
  lighting = list(ambient = 1, diffuse = 0.15, specular = 0, roughness = 1, fresnel = 0),
  tol = 1e-10
)
}
\arguments{
\item{X, Y, Z}{Functions of \code{t} returning \code{x(t)}, \code{y(t)}, \code{z(t)}.}

\item{a, b}{Endpoints of the interval \code{[a,b]}.}

\item{t_points}{Numeric vector of \code{t} where osculating circles/discs are constructed.}

\item{h}{Step size for centered finite differences.}

\item{plot}{\code{TRUE}/\code{FALSE}. If \code{TRUE}, draw with \pkg{plotly}.}

\item{n_samples}{Number of samples of the base curve (only if \code{show_curve = TRUE}).}

\item{fill}{\code{"disk"} (filled surface) or \code{"ring"} (only circumference).}

\item{ru}{Radial subdivisions (only if \code{fill = "disk"}).}

\item{rv}{Angular subdivisions (also used as ring points).}

\item{colorscale}{Plotly colorscale for the discs (e.g., \code{"Reds"}).}

\item{opacity}{Opacity of the discs (0â€“1, only if \code{fill = "disk"}).}

\item{ring_line}{Line style for the ring (only if \code{fill = "ring"}).}

\item{show_curve, show_points}{Whether to show the base curve and the points \code{r(t)}.}

\item{curve_line, point_marker}{Styles for curve and points (Plotly).}

\item{show_radius}{\code{TRUE}/\code{FALSE} to draw a radius from \code{C} to the boundary.}

\item{radius_phase}{Angle (in radians) of the radius (default \code{0}).}

\item{radius_line}{Line style for the radius, e.g., \code{list(color = "orange", width = 5)}.}

\item{scene}{3D scene settings (Plotly).}

\item{bg}{Background colors (\code{paper}, \code{plot}).}

\item{lighting}{Lighting options for \code{add_surface} (when \code{fill = "disk"}).}

\item{tol}{Numerical tolerance.}
}
\value{
\describe{
\item{\code{data}}{A \code{tibble} with columns
\code{t, x, y, z, kappa, cx, cy, cz, radius, Tx, Ty, Tz, Nx, Ny, Nz, Bx, By, Bz}.}
\item{\code{plot}}{(if \code{plot = TRUE}) a \pkg{plotly} object.}
}
}
\description{
For each \code{t0} in \code{t_points}, it computes the Frenet frame
\eqn{\mathbf{T}(t_0), \mathbf{N}(t_0), \mathbf{B}(t_0)} and the curvature
\eqn{\kappa(t_0) = \| \mathbf{r}'(t_0) \times \mathbf{r}''(t_0) \| \,/\, \| \mathbf{r}'(t_0) \|^3 }.
The osculating circle has center \eqn{\mathbf{C} = \mathbf{r}(t_0) + \mathbf{N}(t_0)/\kappa(t_0)}
and radius \eqn{R = 1/\kappa(t_0)}.
}
\details{
You can draw the \strong{osculating disc} (\code{fill = "disk"}) or just the
\strong{osculating circumference} (\code{fill = "ring"}). A parametrization is:
\deqn{\mathbf{S}(u,v) = \mathbf{C} + R\,u\,\big(-\mathbf{N}(t_0)\cos v + \mathbf{T}(t_0)\sin v\big).}
}
\examples{
X <- function(t) cos(t); Y <- function(t) sin(t); Z <- function(t) 0.2*t
osculating_circle3d(X, Y, Z, a = 0, b = 6*pi, t_points = c(pi, 2*pi), plot = FALSE)

}
