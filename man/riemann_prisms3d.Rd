% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/riemann_prisms3d.R
\name{riemann_prisms3d}
\alias{riemann_prisms3d}
\title{Riemann rectangular prisms over a planar region}
\usage{
riemann_prisms3d(
  F,
  f1,
  f2,
  a,
  b,
  N,
  M,
  plot = TRUE,
  estimate = c("lower", "upper", "mean", "all"),
  sample_n = 6,
  show_surface = FALSE,
  surface_colorscale = "Viridis",
  surface_opacity = 0.35,
  show_surface_grid = TRUE,
  surface_grid_color = "rgba(60,80,200,0.25)",
  surface_grid_width = 1,
  color_by = c("mean", "lower", "upper"),
  top_colorscale = "YlOrBr",
  top_opacity = 0.85,
  side_color = "rgba(60,60,60,0.25)",
  side_opacity = 0.35,
  frame_color = "rgba(0,0,0,0.55)",
  frame_width = 1.5,
  scene = list(aspectmode = "data", xaxis = list(title = "x"), yaxis = list(title = "y"),
    zaxis = list(title = "z")),
  bg = list(paper = "white", plot = "white")
)
}
\arguments{
\item{F}{function \code{F(x,y)} returning a numeric scalar.}

\item{f1, f2}{functions \code{f_i(x)}; lower/upper y-boundaries.}

\item{a, b}{Numeric x-interval endpoints \eqn{[a,b]} with \eqn{a \le b}.}

\item{N, M}{integers > 0; number of cells in x and y.}

\item{plot}{logical; if \code{TRUE}, draw the prisms.}

\item{estimate}{character; which estimate to compute (\code{"lower"}, \code{"upper"}, \code{"mean"}).}

\item{sample_n}{integer; subgrid size per cell for mean/estimates.}

\item{show_surface}{logical; draw the underlying surface \eqn{z = F(x,y)}.}

\item{surface_colorscale}{character; Plotly colorscale for the surface (e.g., \code{"Viridis"}).}

\item{surface_opacity}{Numeric in \eqn{[0,1]}.}

\item{show_surface_grid}{logical; show contour grid on the surface.}

\item{surface_grid_color}{character; color for surface grid lines.}

\item{surface_grid_width}{numeric; width for surface grid lines.}

\item{color_by}{character; how to color prisms (\code{"value"}, \code{"height"}, etc.).}

\item{top_colorscale}{character; colorscale for prism tops.}

\item{top_opacity}{Numeric in \eqn{[0,1]}.}

\item{side_color}{character; color for prism sides.}

\item{side_opacity}{Numeric in \eqn{[0,1]}.}

\item{frame_color}{character; color for cell frames.}

\item{frame_width}{numeric; line width for frames.}

\item{scene}{list; Plotly 3D scene options.}

\item{bg}{list; background colors (\code{paper}, \code{plot}).}
}
\value{
\describe{
\item{\code{lower}}{Lower Riemann sum on the selected partition (if requested).}
\item{\code{upper}}{Upper Riemann sum on the selected partition (if requested).}
\item{\code{mean}}{Cellwise mean of \eqn{F} on the fine subgrid (if requested).}
\item{\code{plot}}{Plotly object if \code{plot = TRUE}, else \code{NULL}.}
}
}
\description{
Approximates \eqn{\iint_{\Omega} F(x,y)\,dx\,dy} over
\eqn{\Omega = \{(x,y): a \le x \le b,\ \min(f_1(x), f_2(x)) \le y \le \max(f_1(x), f_2(x))\}}
using an \eqn{N \times M} partition. For each valid cell it can draw
\strong{rectangular prisms} with flat top (constant \eqn{z} per cell).
}
\examples{
F <- function(x,y) x*y
f1 <- function(x) 0; f2 <- function(x) 1 - x
# riemann_prisms3d(F, a = 0, b = 1, f1, f2, N = 10, M = 10, plot = FALSE)

}
