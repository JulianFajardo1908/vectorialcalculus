% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/line_integral2d.R
\name{line_integral2d}
\alias{line_integral2d}
\title{Line integral of a scalar field in \eqn{\mathbb{R}^2} with 3D visualization}
\usage{
line_integral2d(
  f,
  r,
  a,
  b,
  plot = TRUE,
  n_curve = 400,
  n_curtain_v = 40,
  n_surf_x = 80,
  n_surf_y = 80,
  colorscale = "Viridis",
  surface_opacity = 0.65,
  show_surface_grid = TRUE,
  surface_grid_color = "rgba(80,80,80,0.25)",
  surface_grid_width = 1,
  curtain = 0.4,
  curtain_colorscale = c("white", "#2a9d8f"),
  curve_color = "black",
  curve_width = 3,
  lifted_color = "red",
  lifted_width = 2,
  h = NULL,
  method = c("adaptive", "simpson"),
  n_simpson = 1000,
  scene = list(aspectmode = "data", xaxis = list(title = "x"), yaxis = list(title = "y"),
    zaxis = list(title = "z")),
  bg = list(paper = "white", plot = "white")
)
}
\arguments{
\item{f}{Scalar field \code{function(x,y)} returning a numeric \eqn{f(x,y)}.}

\item{r}{Parametric curve \code{function(t)} returning \code{c(x,y)}.}

\item{a, b}{Parameter limits \eqn{t} with \code{b > a}.}

\item{plot}{Logical. If \code{TRUE}, plot with \pkg{plotly}.}

\item{n_curve}{Number of samples along the curve (for curtain and traces).}

\item{n_curtain_v}{Vertical resolution of the curtain (\eqn{v}).}

\item{n_surf_x, n_surf_y}{Grid resolution for the surface \eqn{z=f(x,y)}.}

\item{colorscale}{Colorscale for the surface (Plotly name, a single color,
or a vector like \code{c("white","#2a9d8f")}).}

\item{surface_opacity}{Surface opacity in \code{[0,1]}.}

\item{show_surface_grid, surface_grid_color, surface_grid_width}{Grid overlay on the surface.}

\item{curtain}{Curtain opacity in \code{[0,1]} (0 disables the curtain).}

\item{curtain_colorscale}{Colorscale for the curtain (same formats as \code{colorscale}).}

\item{curve_color, curve_width}{Style for the curve in \eqn{z=0}.}

\item{lifted_color, lifted_width}{Style for the lifted curve.}

\item{h}{Step for finite differences in \eqn{t}. If \code{NULL}, it is chosen automatically.}

\item{method}{Integration method: \code{"adaptive"} uses \code{stats::integrate};
\code{"simpson"} uses composite Simpson with \code{n_simpson} subintervals (even).}

\item{n_simpson}{Number of subintervals for Simpson (adjusted to be even if necessary).}

\item{scene, bg}{3D scene and background settings.}
}
\value{
A list with:
\itemize{
\item \code{value}: numeric value of the line integral,
\item \code{fig}: a \pkg{plotly} object if \code{plot=TRUE}, otherwise \code{NULL}.
}
}
\description{
Numerically computes \eqn{\int_a^b f(\mathbf r(t))\,\|\mathbf r'(t)\|\,dt} and draws:
\itemize{
\item The surface \eqn{z = f(x,y)} over a rectangle defined by the
\emph{endpoints} of the curve (\eqn{x\in[x_a,x_b]}, \eqn{y\in[y_a,y_b]}).
\item The curve \eqn{\mathbf r(t)} in the plane \eqn{z=0} and its “lifted”
version \eqn{(x(t),y(t),f(x(t),y(t)))}.
\item A vertical \strong{curtain} over the curve:
\eqn{(x(t),y(t),v\,f(x(t),y(t)))}, \eqn{v\in[0,1]}.
}
}
\details{
Derivatives are computed with centered finite differences. The surface domain
mirrors the WxMaxima behavior: it uses only the curve \emph{endpoints} \code{r(a)} and \code{r(b)}.
}
\examples{
\dontshow{if (interactive()) \{}
# Scalar field and a planar “spiral-ish” curve
f <- function(x,y) x^2 + y^2
r <- function(t) c(t*cos(t), t*sin(3*t))
line_integral2d(
  f, r, a = 0, b = 2*pi,
  plot = TRUE,
  colorscale = c("white","#a8dadc"), surface_opacity = 0.35,
  curtain = 0.4, curtain_colorscale = c("white","#1d3557"),
  curve_color = "black", lifted_color = "red"
)
\dontshow{\}}

}
