% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vector_field3d.R
\name{vector_field3d}
\alias{vector_field3d}
\title{3D Vector field in a curvilinear prism \eqn{(x,y,z)}}
\usage{
vector_field3d(
  F,
  H1,
  H2,
  G1,
  G2,
  a,
  b,
  NX = 8,
  NY = 6,
  NZ = 6,
  plot = TRUE,
  arrows = c("both", "line", "cone", "none"),
  arrow_scale = 0.08,
  normalize_bias = 1,
  normal_color = "black",
  normal_width = 1.5,
  arrow_color = "black",
  arrow_opacity = 0.9,
  arrow_size = 0.35,
  scene = list(aspectmode = "data", xaxis = list(title = "x"), yaxis = list(title = "y"),
    zaxis = list(title = "z")),
  bg = list(paper = "white", plot = "white")
)
}
\arguments{
\item{F}{A \code{function(x,y,z)} returning a numeric vector \code{c(Fx,Fy,Fz)}.}

\item{H1, H2}{\code{function(x)} lower/upper bounds in \eqn{y}.}

\item{G1, G2}{\code{function(x,y)} lower/upper bounds in \eqn{z}.}

\item{a, b}{Endpoints in \eqn{x} (\code{b > a}).}

\item{NX, NY, NZ}{Integers \eqn{\ge 1}: density in \eqn{x}, \eqn{y} (u), \eqn{z} (w).
Sampling uses \code{seq(0,1,length.out = N+1)} for each parameter.}

\item{plot}{Logical. If \code{TRUE}, draw with \pkg{plotly}.}

\item{arrows}{Arrow mode: \code{"both"}, \code{"line"}, \code{"cone"} or \code{"none"}.}

\item{arrow_scale}{Global length scale (fraction of the largest span of the bounding box).
\code{0.08} usually looks good.}

\item{normalize_bias}{Saturation bias (Maxima-style): uses \eqn{\sqrt{\|F\|^2 + \texttt{bias}}}.
Larger values saturate earlier. Default \code{1}.}

\item{normal_color, normal_width}{Color and width of the arrow \emph{shaft} (line).}

\item{arrow_color}{Color of the head (cone/chevron).}

\item{arrow_opacity}{Opacity for cones (if \code{add_cone()} is available).}

\item{arrow_size}{Relative head size w.r.t. \code{arrow_scale} (default \code{0.35}).}

\item{scene, bg}{3D scene options and background colors (\code{list(paper=, plot=)}).}
}
\value{
A list with
\itemize{
\item \code{points}: data.frame with positions \code{x,y,z} and magnitude \code{mag},
\item \code{segments}: data.frame with \code{x0,y0,z0,x1,y1,z1} (arrow shafts),
\item \code{fig}: a \pkg{plotly} object if \code{plot=TRUE}, otherwise \code{NULL}.
}
}
\description{
Plots the vector field \eqn{\mathbf{F}(x,y,z)} over the volume
\deqn{\left\{ (x,y,z):\ a \le x \le b,\ H_1(x) \le y \le H_2(x),\ G_1(x,y) \le z \le G_2(x,y) \right\}}
sampled on a regular grid indexed by \eqn{(i,j,k)} with
\eqn{(N_X + 1) \times (N_Y + 1) \times (N_Z + 1)} points,
using the linear blends
\deqn{x = (1 - i)\,a + i\,b,\quad y = (1 - j)\,H_1(x) + j\,H_2(x),\quad z = (1 - k)\,G_1(x,y) + k\,G_2(x,y),}
where \eqn{i \in \{0,\ldots,N_X\}}, \eqn{j \in \{0,\ldots,N_Y\}}, and \eqn{k \in \{0,\ldots,N_Z\}}.

Arrow length is scaled with a saturated norm \eqn{\|\mathbf{F}\|}:
\deqn{\tilde{\mathbf{F}} = \mathbf{F} / \sqrt{\|\mathbf{F}\|^2 + \texttt{normalize\_bias}}}
and then \eqn{L \propto \|\tilde{\mathbf{F}}\|}. Thus small vectors are short
and very large vectors saturate.
}
\examples{
\dontshow{if (interactive()) \{}
# Domain
H1 <- function(x) -1 - x
H2 <- function(x)  1 - x^2
G1 <- function(x,y) y
G2 <- function(x,y) y + 1

# Swirling upward field
F <- function(x,y,z) c(-y, x, 1)

vector_field3d(
  F, H1=H1, H2=H2, G1=G1, G2=G2, a=-1, b=1, NX=8, NY=6, NZ=6,
  plot=TRUE, arrows="both",
  arrow_scale = 0.08, normalize_bias = 1,
  normal_color = "rgba(0,0,0,0.6)", normal_width = 2,
  arrow_color  = "#1d3557", arrow_opacity = 0.95, arrow_size = 0.35
)
\dontshow{\}}

}
