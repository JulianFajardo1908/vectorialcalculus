% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solid_of_revolution_y.R
\name{solid_of_revolution_y}
\alias{solid_of_revolution_y}
\title{Solid of revolution of y = f(x) about y = a (plot + volume + surface area)}
\usage{
solid_of_revolution_y(
  f,
  xlim,
  a,
  nx = 120L,
  nt = 120L,
  deriv = NULL,
  h = NULL,
  include_end_caps = FALSE,
  colors = list(surface = "steelblue", axis = "black", curve = "firebrick"),
  opacity = 0.9,
  show_axis = TRUE,
  show_profile_curve = TRUE,
  curve_thetas = 0,
  curve_width = 4,
  curve_opacity = 1,
  scene = list(aspectmode = "data", xaxis = list(title = "x"), yaxis = list(title = "y"),
    zaxis = list(title = "z"))
)
}
\arguments{
\item{f}{\code{function(x)} integrable on \code{xlim}; may or may not be vectorized.}

\item{xlim}{Numeric length-2 \code{c(xmin, xmax)} with \code{xmax > xmin}.}

\item{a}{Numeric constant: horizontal axis of revolution (\eqn{y=a}).}

\item{nx, nt}{Integers (>= 2): mesh resolution along \eqn{x} and angle \eqn{\theta\in[0,2\pi]}.}

\item{deriv}{Optional \code{function(x)} giving \eqn{f'(x)}; if \code{NULL}, a numeric derivative is used.}

\item{h}{Step for numeric derivative. If \code{NULL}, uses \code{1e-5*(1+abs(x))} per point.}

\item{include_end_caps}{Logical; if \code{TRUE}, adds end-cap areas \eqn{\pi(f(x)-a)^2} at the interval ends to
\code{surface_area_total}. Lateral area is always returned in \code{surface_area_lateral}.}

\item{colors}{List of colors: \code{list(surface="steelblue", axis="black", curve="firebrick")}.}

\item{opacity}{Surface opacity in \eqn{[0,1]}.}

\item{show_axis}{Logical; if \code{TRUE}, draws the revolution axis \eqn{y=a} as a line at \code{z=0}.}

\item{show_profile_curve}{Logical; if \code{TRUE}, overlays the generating curve \eqn{(x,f(x))} mapped onto
the surface at one or more angles \code{curve_thetas}.}

\item{curve_thetas}{Numeric vector of angles (radians) where the profile curve is drawn on the surface.
For example, \code{0} draws it in the plane \code{z=0}; \code{pi/2} draws it at \code{y=a}.}

\item{curve_width, curve_opacity}{Line style for the profile curve(s).}

\item{scene}{Plotly scene (axes titles, aspect, etc.).}
}
\value{
A list with:
\itemize{
\item \code{volume}: numeric, \eqn{V}.
\item \code{surface_area_lateral}: numeric, lateral area \eqn{S}.
\item \code{surface_area_total}: numeric, \eqn{S} (+ caps if \code{include_end_caps=TRUE}).
\item \code{figure}: \pkg{plotly} object (or \code{NULL} if \pkg{plotly} is missing).
}
}
\description{
Builds a 3D Plotly surface for the solid generated by rotating the curve
\eqn{(x, f(x))} around the horizontal line \eqn{y = a} on \eqn{[x_{\min}, x_{\max}]},
and computes:
\itemize{
\item \strong{Volume}: \eqn{V = \pi \int_{x_{\min}}^{x_{\max}} (f(x)-a)^2\,dx}.
\item \strong{Lateral surface area}: \eqn{S = 2\pi \int_{x_{\min}}^{x_{\max}}
        |f(x)-a|\,\sqrt{1+(f'(x))^2}\,dx}.
}
}
\details{
The plot renders \emph{only} the 3D surface; it does not shade/fill the 2D area under the curve.
Numerical derivatives use central finite differences (order 2) with one-sided fallback near ends.
Integrals use \code{stats::integrate}.
}
\examples{
\dontshow{if (interactive()) \{}
f <- function(x) 0.4 + 0.5*exp(-x^2/2)*cos(3*x)  # a smooth bump above ~0
out <- solid_of_revolution_y(
  f, xlim = c(-2, 2), a = 0,
  nx = 120, nt = 160,
  include_end_caps = FALSE,
  colors = list(surface="#6baed6", axis="black", curve="#e63946"),
  show_profile_curve = TRUE, curve_thetas = c(0, pi/2),
  curve_width = 5
)
out$volume; out$surface_area_lateral
\dontshow{\}}

}
