% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xy_region.R
\name{xy_region}
\alias{xy_region}
\title{Region in the xy–plane between two curves y = H1(x), y = H2(x) (2D or 3D)}
\usage{
xy_region(
  H1,
  H2,
  a,
  b,
  D,
  plot = TRUE,
  n_curve = 800,
  fill = FALSE,
  fillcolor = "rgba(49,130,189,0.25)",
  boundary_line = list(color = "blue", width = 2),
  partition_line = list(color = "blue", width = 1),
  show_end_edges = TRUE,
  axis_equal = TRUE,
  as_3d = FALSE,
  plane_z = 0,
  n_u = 30,
  surface_colorscale = "Blues",
  surface_opacity = 0.3,
  show_surface_grid = TRUE,
  surface_grid_color = "rgba(60,80,200,0.25)",
  surface_grid_width = 1,
  scene = list(aspectmode = "data", xaxis = list(title = "x"), yaxis = list(title = "y"),
    zaxis = list(title = "z")),
  bg = list(paper = "white", plot = "white")
)
}
\arguments{
\item{H1, H2}{\code{function(x)}.}

\item{a, b}{Endpoints of the interval in \eqn{x}.}

\item{D}{Desired step between vertical partitions (we use \eqn{n=\lceil (b-a)/D\rceil}).}

\item{plot}{\code{TRUE}/\code{FALSE}. If \code{TRUE}, draw with \pkg{plotly}.}

\item{n_curve}{Integer, number of samples for the curves.}

\item{fill}{\code{TRUE}/\code{FALSE}. If \code{TRUE}, fill the region.}

\item{fillcolor}{(2D) Fill color (rgba or simple color).}

\item{boundary_line}{Line style for the boundary curves.}

\item{partition_line}{Line style for the vertical partitions.}

\item{show_end_edges}{\code{TRUE}/\code{FALSE} to also include \eqn{x=a} and \eqn{x=b}.}

\item{axis_equal}{(2D) \code{TRUE}/\code{FALSE} to use the same scale in x and y.}

\item{as_3d}{\code{TRUE}/\code{FALSE} to draw in 3D over \code{plane_z}.}

\item{plane_z}{Height of the \eqn{z}-plane (default 0).}

\item{n_u}{(3D) “Transverse” resolution for the filled surface.}

\item{surface_colorscale}{(3D) Plotly colorscale for the fill (e.g., "Blues").}

\item{surface_opacity}{(3D) Opacity of the fill (0–1).}

\item{show_surface_grid}{(3D) \code{TRUE}/\code{FALSE} grid over the filled surface.}

\item{surface_grid_color, surface_grid_width}{(3D) Aesthetics of that grid.}

\item{scene}{(3D) Scene settings (default \code{aspectmode="data"}).}

\item{bg}{(3D) Background colors \code{list(paper="white", plot="white")}.}
}
\value{
A list with:
\itemize{
\item \code{x}, \code{y1}, \code{y2}, \code{y_low}, \code{y_high}
\item \code{x_part} (partition positions)
\item \code{fig} (plotly object if \code{plot=TRUE}, otherwise \code{NULL})
}
}
\description{
For \eqn{x \in [a,b]}, this plots the curves \eqn{y = H_1(x)} and \eqn{y = H_2(x)},
the vertical partitions every \eqn{D} (using \eqn{n=\lceil(b-a)/D\rceil}),
and optionally fills the region. With \code{as_3d=TRUE}, it draws the scene
in 3D over the plane \eqn{z=\texttt{plane\_z}} (useful to combine with other surfaces).
}
\examples{
H1 <- function(x) sin(x) - 0.3
H2 <- function(x) 0.8 + 0.2*cos(2*x)

# Classic 2D:
xy_region(H1, H2, a = 0, b = 2*pi, D = 0.5,
          plot = TRUE, fill = TRUE)

# 3D over z=0 (very light filled surface):
xy_region(H1, H2, a = 0, b = 2*pi, D = 0.5,
          plot = TRUE, as_3d = TRUE, fill = TRUE,
          surface_colorscale = "Blues", surface_opacity = 0.30,
          show_surface_grid = TRUE)

}
