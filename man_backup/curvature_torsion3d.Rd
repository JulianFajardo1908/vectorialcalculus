% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/curvature_torsion3d.R
\name{curvature_torsion3d}
\alias{curvature_torsion3d}
\title{Curvature and torsion of a 3D parametric curve (numeric)}
\usage{
curvature_torsion3d(
  X,
  Y,
  Z,
  t0,
  h = 1e-04,
  plot = FALSE,
  window = 1,
  n_samples = 200,
  line = list(color = "red", width = 2, dash = "solid"),
  point = list(color = "black", size = 5, symbol = "circle"),
  scene = list(aspectmode = "data", xaxis = list(title = "x(t)"), yaxis = list(title =
    "y(t)"), zaxis = list(title = "z(t)")),
  bg = list(paper = "white", plot = "white"),
  tol = 1e-10
)
}
\arguments{
\item{X, Y, Z}{Functions of \code{t} returning scalars (coordinates of \eqn{r(t)}).}

\item{t0}{Parameter value at which curvature and torsion are evaluated.}

\item{h}{Step size for finite differences (recommended between \code{1e-6} and \code{1e-3}, depending on scale).}

\item{plot}{Logical. If \code{TRUE}, shows a curve segment around \code{t0}.}

\item{window}{Window length in parameter \code{t} for plotting (interval \code{[t0 - window/2, t0 + window/2]}).}

\item{n_samples}{Number of sample points in the window if \code{plot = TRUE}.}

\item{line}{Line style for the curve, e.g. \code{list(color="red", width=2, dash="solid")}.}

\item{point}{Marker style for \code{r(t0)}, e.g. \code{list(size=4, color="black", symbol="circle")}.}

\item{scene}{3D axes settings (see examples); by default uses \code{aspectmode="data"} for proportional axes.}

\item{bg}{Background colors: \code{list(paper="white", plot="white")}.}

\item{tol}{Numeric tolerance to detect degeneracies (\eqn{\lVert r'(t0)\rVert \approx 0} or \eqn{\lVert r' \times r''\rVert \approx 0}).}
}
\value{
A list with:
\itemize{
\item \code{kappa}: curvature at \code{t0}.
\item \code{tau}: torsion at \code{t0} (NA if \eqn{r'(t0) \times r''(t0)} is nearly zero).
\item \code{t0}: the evaluation point.
\item \code{point}: vector \code{c(x,y,z)} with \eqn{r(t0)}.
\item \code{r1}, \code{r2}, \code{r3}: numeric derivatives \eqn{r'(t0)}, \eqn{r''(t0)}, \eqn{r'''(t0)}.
}
}
\description{
Computes at a point \code{t0} the \strong{curvature}
\deqn{\kappa(t0) = \frac{\lVert r'(t0) \times r''(t0)\rVert}{\lVert r'(t0)\rVert^3}}
and the \strong{torsion}
\deqn{\tau(t0) = \frac{\det(r'(t0), r''(t0), r'''(t0))}{\lVert r'(t0) \times r''(t0)\rVert^2}}
using centered finite differences for derivatives (1st, 2nd and 3rd).
Optionally, it can plot a \emph{local segment} of the curve around \code{t0}
and mark the point \code{r(t0)} in 3D with \pkg{plotly}.
}
\examples{
# Example curve
X <- function(t) t^2*cos(t)
Y <- function(t) t^3*sin(3*t)
Z <- function(t) t
res <- curvature_torsion3d(X, Y, Z, t0 = pi)
res$kappa; res$tau

# \donttest{ if (requireNamespace("plotly", quietly = TRUE)) {
#   curvature_torsion3d(
#     X, Y, Z, t0 = pi, plot = TRUE,
#     window = 1.0, n_samples = 200,
#     line  = list(color="red",  width=2),
#     point = list(color="black", size=5, symbol="circle")
#   )
# } }
}
