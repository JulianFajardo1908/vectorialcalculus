% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/line_integral_vector3d.R
\name{line_integral3d_work}
\alias{line_integral3d_work}
\title{3D line integral of a vector field with an auto-fitted field domain}
\usage{
line_integral3d_work(
  F,
  r,
  a,
  b,
  plot = TRUE,
  n_curve = 600,
  n_field = 7,
  field_ranges = NULL,
  pad = 0.15,
  arrows = c("both", "line", "cone", "none"),
  arrow_scale = 0.1,
  normalize_bias = 1,
  scene = list(aspectmode = "data", xaxis = list(title = "x"), yaxis = list(title = "y"),
    zaxis = list(title = "z")),
  bg = list(paper = "white", plot = "white")
)
}
\arguments{
\item{F}{function(x,y,z) -> c(Fx,Fy,Fz)  (or function(x,y,z,t))}

\item{r}{function(t) -> c(x,y,z)}

\item{a, b}{parameter limits (b > a)}

\item{plot}{logical; if TRUE, draw with plotly}

\item{n_curve}{samples for the curve}

\item{n_field}{integer >=2; arrows per axis (produces n_field^3 arrows)}

\item{field_ranges}{optional list(x = c(xmin,xmax), y = c(ymin,ymax), z = c(zmin,zmax)).
If NULL, they are inferred from the curve.}

\item{pad}{fraction of range added on each side when auto-ranging (e.g. 0.15 = 15\%)}

\item{arrows}{"line" | "cone" | "both" | "none"}

\item{arrow_scale}{relative arrow length (fraction of max span)}

\item{normalize_bias}{saturation bias for |F| (bigger -> shorter arrows)}

\item{scene, bg}{plotly scene & background}
}
\value{
list(value=work, fig=plotly_or_NULL)
}
\description{
Computes \eqn{\int_{a}^{b} F(\mathbf{r}(t)) \cdot \mathbf{r}'(t)\, dt} and draws the curve together with arrows of F.
The arrow grid is fitted to the curve's bounding box unless you pass explicit ranges.
}
